Exercise 1

/usr/bin/time and time report different time measures, though quite similar. The times reported by the application, when summed up agree with the elapsed time approximately.
If we now select the transpose ACCESS(i,j), the timings look less similar in usr and sys, but agree in real/elapsed. Again, when summing up the times reported by the application, they do somewhat agree with the elapsed/real time value.
----------

Exercise 2

In initmat.cpp, I added the line #include "rusage.h" at the beggining and the following lines at the beggining and the end of the main function:
```
int main(int argc, char *argv[])
{
   struct rusage r;
   int res_init = get_resource_usage(&r);
   ...
   int res_fini = get_resource_usage(&r);
   return 0;
}
```
The Makefile entry for initmat was subsequently modified to include rusage.cpp:
```
initmat: initmat.cpp
	g++ -fopt-info -fopenmp -g -O3 -o initmat initmat.cpp rusage.cpp
```
----------

Exercise 3

I added to the end of the main function, and after the int res_fini = ... line, the following lines of code:
```
   printf("User mode time: %f\n", timeval_to_ms(&r.ru_utime));
   printf("Maximum resident set size: %ld\n", r.ru_maxrss);
   printf("Number of voluntary context switches: %ld\n", r.ru_nvcsw);
   printf("Number of involuntary context switches: %ld\n", r.ru_nivcsw);
```
The results were the following:
- User mode time: 474.762 ms
- Maximum resident set size: 410528 kB
- Voluntary context switches: 0
- Involuntary context switches: 3
----------

Exercise 4

Using exercise4.sh, I gathered the following information:
- 1 thread:
User mode time: 477.482000
Maximum resident set size: 412596
Number of voluntary context switches: 0
Number of involuntary context switches: 9
- 2 threads:
User mode time: 607.547000
Maximum resident set size: 412720
Number of voluntary context switches: 2
Number of involuntary context switches: 13
- 4 threads:
User mode time: 728.616000
Maximum resident set size: 412656
Number of voluntary context switches: 6
Number of involuntary context switches: 71
- 8 threads:
User mode time: 715.657000
Maximum resident set size: 412812
Number of voluntary context switches: 19
Number of involuntary context switches: 201
----------

Exercise 5

For the proposed cases, we get the following information (using exercise5.sh):
2 sw threads, 1 hw thread
- Number of voluntary context switches: 3
- Number of involuntary context switches: 51
4 sw threads, 1 hw thread
- Number of voluntary context switches: 9
- Number of involuntary context switches: 73
4 sw threads, 2 hw threads
- Number of voluntary context switches: 9
- Number of involuntary context switches: 88
4 sw threads, 3 hw threads
- Number of voluntary context switches: 9
- Number of involuntary context switches: 35
In these conditions, we can see how voluntary context switches seem to be related to the number of software threads available, while involuntary context switches show more of a random pattern. This last thing makes sense, as the number of involuntary context switches might be related to the activity of the computer in the moment of execution.
----------

Exercise 6


