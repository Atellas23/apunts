install.packages("kernlab")
install.packages("klaR")
install.packages("klaR")
install.packages("bootcluster")
library(magrittr)
library(caret)
library(factoextra)
library(MASS)
data <- read.table("clean2.data", sep=',')
Musk.211 <- data[data$V1 == "MUSK-211",]
Musk.212 <- data[data$V1 == "MUSK-212",]
Musk.213 <- data[data$V1 == "MUSK-213",]
variables <- paste("V", 3:168, sep="")
fmla <- as.formula(paste("V169 ~ ", paste(variables, collapse= "+")))
giant_model <- glm(fmla, family = binomial, data = data)
# summary(giant_model)
# step(giant_model) -- Do not run
# Choose a small (<20) number of variables
n <- 20
# Formula for succint writing, excluding the factor variables due being the names
variables <- paste("V", 3:(n + 2), sep="")
fmla <- as.formula(paste("V169 ~ ", paste(variables, collapse= "+")))
# Simple GLM explaining V169 with respect to the first n variables
mod.simple <- glm(fmla, family = binomial, data = data)
summary(mod.simple)
# PCA decomposition of the data
pca_data <- princomp(data[, -1:-2])
indices <- get_pca_ind(pca_data)
# Coordinates to use as variables
dim <- 35
coord <- indices$coord
reduced_data <- cbind(data[169], coord[,1:dim])
dimensions <- paste("Dim.", 1:dim, sep="")
pca_fmla <- as.formula(paste("V169 ~ ", paste(dimensions, collapse= "+")))
# GLM model from principal components using dim principal components
glm_pca <- glm(pca_fmla, family = binomial, data = reduced_data)
# Eliminating redundancy using Akaike Information Criterion (AIC)
pca_out <- sink(step(glm_pca))
indices <- get_pca_ind(pca_data)
# Coordinates to use as variables
dim <- 35
coord <- indices$coord
reduced_data <- cbind(data[169], coord[,1:dim])
dimensions <- paste("Dim.", 1:dim, sep="")
pca_fmla <- as.formula(paste("V169 ~ ", paste(dimensions, collapse= "+")))
# GLM model from principal components using dim principal components
glm_pca <- glm(pca_fmla, family = binomial, data = reduced_data)
# Eliminating redundancy using Akaike Information Criterion (AIC)
pca_out <- invisible(step(glm_pca))
# Eliminating redundancy using Akaike Information Criterion (AIC)
pca_out <-capture.output(step(glm_pca))
# Eliminating redundancy using Akaike Information Criterion (AIC)
capture.output(step(glm_pca))
pca_out
# Eliminating redundancy using Akaike Information Criterion (AIC)
pca_out <- capture.output(step(glm_pca))
pca_out
