knitr::opts_chunk$set(echo = TRUE)
y <- read.csv(file="input.csv", header=TRUE, sep=";")
(y <- as.numeric(sub(",", ".", unlist(y), fixed = TRUE)))
y <- read.csv(file="input.csv", header=TRUE, sep=";")
(y <- as.numeric(sub(",", ".", unlist(y), fixed = TRUE)))
```{r setup, include=FALSE}
---
title: "practica1PIE2"
author: "alex.batlle"
date: "11/11/2019"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
y <- read.csv(file="input.csv", header=TRUE, sep=";")
(y <- as.numeric(sub(",", ".", unlist(y), fixed = TRUE)))
L_estimator
l = log(L)
#second answer
L
l
library(MASS)
beta_estimator = fitdistr(y, "gamma", start=list(shape=alfa, rate=beta), lower = c(alfa-0.0000000001, 0), upper = c(alfa, 100))$estimate
y <- read.csv(file="input.csv", header=TRUE, sep=";")
y <- read.csv(file="input1.csv", header=TRUE, sep=";")
y <- read.csv(file="input1.csv", header=TRUE, sep=";")
setwd('.')
y <- read.csv(file="input1.csv", header=TRUE, sep=";")
setwd('.')
y <- read.csv(file="input1.csv", header=TRUE, sep=";")
setwd('~/KOLMOGOROV/practicapie2')
y <- read.csv(file="input1.csv", header=TRUE, sep=";")
y <- as.numeric(sub(",", ".", unlist(y), fixed = TRUE))
alfa <- 18.7
beta <- 18
gamma_y <- dgamma(y, alfa, beta)
L = prod(gamma_y)
l = log(L)
# first answer
L
l
beta = 19
gamma_y <- dgamma(y, alfa, beta)
L = prod(gamma_y)
l = log(L)
#second answer
L
l
setwd('~/KOLMOGOROV/practicapie2')
setwd('~/KOLMOGOROV/practicapie2')
y <- read.csv(file="input1.csv", header=TRUE, sep=";")
y <- as.numeric(sub(",", ".", unlist(y), fixed = TRUE))
alfa <- 18.7
beta <- 18
gamma_y <- dgamma(y, alfa, beta)
L = prod(gamma_y)
l = log(L)
# first answer
L
l
beta = 19
gamma_y <- dgamma(y, alfa, beta)
L = prod(gamma_y)
l = log(L)
#second answer
L
l
library(MASS)
beta_estimator = fitdistr(y, "gamma", start=list(shape=alfa, rate=beta), lower = c(alfa-0.0000000001, 0), upper = c(alfa, 100))$estimate
beta_estimator
gamma_y_estimator <- dgamma(y, alfa, beta_estimator)
L_estimator = prod(gamma_y_estimator)
L_estimator
beta_estimator = fitdistr(y, "gamma", start=list(shape=alfa, rate=beta), lower = c(alfa, 0), upper = c(alfa, 100))$estimate
beta_estimator = fitdistr(y, "gamma", start=list(shape=alfa, rate=beta), lower = c(alfa-0.0000000001, 0), upper = c(alfa, 100))$estimate
beta_estimator
gamma_y_estimator <- dgamma(y, alfa, beta_estimator)
L_estimator = prod(gamma_y_estimator)
L_estimator
gamma_y_estimator <- dgamma(y, alfa, beta_estimator)
L_estimator = prod(gamma_y_estimator)
L_estimator
setwd('~/KOLMOGOROV/practicapie2')
y <- read.csv(file="input1.csv", header=TRUE, sep=";")
y <- as.numeric(sub(",", ".", unlist(y), fixed = TRUE))
alfa <- 18.7
beta <- 18
gamma_y <- dgamma(y, alfa, beta)
L = prod(gamma_y)
l = log(L)
# first answer
L
l
beta = 19
gamma_y <- dgamma(y, alfa, beta)
L = prod(gamma_y)
l = log(L)
#second answer
L
l
# SECOND PART
library(MASS)
beta_estimator = fitdistr(y, "gamma", start=list(shape=alfa, rate=beta), lower = c(alfa-0.0000000001, 0), upper = c(alfa, 100))$estimate
beta_estimator
gamma_y_estimator <- dgamma(y, alfa, beta_estimator)
L_estimator = prod(gamma_y_estimator)
L_estimator
log-likelihood <- function(y_vector) {
temp_dist <- dgamma(y_vector,alfa,beta_estimator)
log_dist = log(temp_dist)
sum_log_dist = sum(log_dist)
}
log-likelihood <- function(y_vector) {
temp_dist <- dgamma(y_vector,alfa,beta_estimator)
log_dist = log(temp_dist)
sum_log_dist <- sum(log_dist)
}
log_likelihood <- function(y_vector) {
temp_dist <- dgamma(y_vector,alfa,beta_estimator)
log_dist = log(temp_dist)
sum_log_dist <- sum(log_dist)
}
install
install.packages("numDeriv")
hessian(log_likelihood,y)
load(numericDeriv)
hessian(log_likelihood,y)
hessian(log_likelihood,beta_estimator)
install.packages("numDeriv")
warnings()
hessian(log_likelihood,beta_estimator)
gamma_y <- dgamma(y, alfa, beta)
setwd('~/KOLMOGOROV/practicapie2')
setwd('.')
y <- read.csv(file="input1.csv", header=TRUE, sep=";")
y <- as.numeric(sub(",", ".", unlist(y), fixed = TRUE))
alfa <- 18.7
beta <- 18
gamma_y <- dgamma(y, alfa, beta)
L = prod(gamma_y)
l = log(L)
# first answer
L
l
beta = 19
gamma_y <- dgamma(y, alfa, beta)
L = prod(gamma_y)
l = log(L)
#second answer
L
l
library(MASS)
beta_estimator = fitdistr(y, "gamma", start=list(shape=alfa, rate=beta), lower = c(alfa-0.0000000001, 0), upper = c(alfa, 100))$estimate
beta_estimator
gamma_y_estimator <- dgamma(y, alfa, beta_estimator)
L_estimator = prod(gamma_y_estimator)
L_estimator
log_likelihood <- function(beta_est) {
temp_dist <- dgamma(y,alfa,beta_est)
log_dist = log(temp_dist)
sum_log_dist <- sum(log_dist)
}
hessian(log_likelihood,beta_estimator)
setwd('.')
y <- read.csv(file="input1.csv", header=TRUE, sep=";")
y <- as.numeric(sub(",", ".", unlist(y), fixed = TRUE))
alfa <- 18.7
beta <- 18
gamma_y <- dgamma(y, alfa, beta)
L = prod(gamma_y)
l = log(L)
# first answer
L
l
beta = 19
gamma_y <- dgamma(y, alfa, beta)
L = prod(gamma_y)
l = log(L)
#second answer
L
l
# SECOND PART
library(MASS)
beta_estimator = fitdistr(y, "gamma", start=list(shape=alfa, rate=beta), lower = c(alfa-0.0000000001, 0), upper = c(alfa, 100))$estimate
beta_estimator
gamma_y_estimator <- dgamma(y, alfa, beta_estimator)
L_estimator = prod(gamma_y_estimator)
L_estimator
log_likelihood <- function(beta_est) {
temp_dist <- dgamma(y,alfa,beta_est)
log_dist = log(temp_dist)
sum_log_dist <- sum(log_dist)
}
hessian(log_likelihood,beta_estimator)
setwd('.')
y <- read.csv(file="input1.csv", header=TRUE, sep=";")
y <- as.numeric(sub(",", ".", unlist(y), fixed = TRUE))
alfa <- 18.7
beta <- 18
gamma_y <- dgamma(y, alfa, beta)
L = prod(gamma_y)
l = log(L)
# first answer
L
l
beta = 19
gamma_y <- dgamma(y, alfa, beta)
L = prod(gamma_y)
l = log(L)
#second answer
L
l
# SECOND PART
library(MASS)
beta_estimator = fitdistr(y, "gamma", start=list(shape=alfa, rate=beta), lower = c(alfa-0.0000000001, 0), upper = c(alfa, 100))$estimate
beta_estimator
gamma_y_estimator <- dgamma(y, alfa, beta_estimator)
L_estimator = prod(gamma_y_estimator)
L_estimator
log_likelihood <- function(beta_est) {
temp_dist <- dgamma(y,alfa,beta_est)
log_dist = log(temp_dist)
sum_log_dist <- sum(log_dist)
}
install.packages("numDeriv")
hessian(log_likelihood,beta_estimator)
grad(log_likelihood,beta_estimator)
grad(sin,pi)
hessian(log_likelihood,beta_estimator)
setwd('.')
y <- read.csv(file="input1.csv", header=TRUE, sep=";")
y <- as.numeric(sub(",", ".", unlist(y), fixed = TRUE))
alfa <- 18.7
beta <- 18
gamma_y <- dgamma(y, alfa, beta)
L = prod(gamma_y)
l = log(L)
# first answer
L
l
beta = 19
gamma_y <- dgamma(y, alfa, beta)
L = prod(gamma_y)
l = log(L)
#second answer
L
l
# SECOND PART
library(MASS)
beta_estimator = fitdistr(y, "gamma", start=list(shape=alfa, rate=beta), lower = c(alfa-0.0000000001, 0), upper = c(alfa, 100))$estimate
beta_estimator
gamma_y_estimator <- dgamma(y, alfa, beta_estimator)
L_estimator = prod(gamma_y_estimator)
L_estimator
log_likelihood <- function(beta_est) {
temp_dist <- dgamma(y,alfa,beta_est)
log_dist = log(temp_dist)
sum_log_dist <- sum(log_dist)
}
library(numDeriv)
library(numDeriv)
hessian(log_likelihood,beta_estimator)
beta_estimator
beta_estimator.second
beta_estimator[rate]
beta_estimator[1]
beta_estimator[2]
hessian(log_likelihood,beta_estimator[2])
setwd('.')
y <- read.csv(file="input1.csv", header=TRUE, sep=";")
y <- as.numeric(sub(",", ".", unlist(y), fixed = TRUE))
alfa <- 18.7
beta <- 18
gamma_y <- dgamma(y, alfa, beta)
L = prod(gamma_y)
l = log(L)
# first answer
L
l
beta = 19
gamma_y <- dgamma(y, alfa, beta)
L = prod(gamma_y)
l = log(L)
#second answer
L
l
# SECOND PART
library(MASS)
beta_estimator = fitdistr(y, "gamma", start=list(shape=alfa, rate=beta), lower = c(alfa-0.0000000001, 0), upper = c(alfa, 100))$estimate
beta_estimator
gamma_y_estimator <- dgamma(y, alfa, beta_estimator)
L_estimator = prod(gamma_y_estimator)
L_estimator
log_likelihood <- function(beta_est) {
temp_dist <- dgamma(y,alfa,beta_est)
log_dist = log(temp_dist)
sum_log_dist <- sum(log_dist)
}
library(numDeriv)
hessian(log_likelihood,beta_estimator[2])
install.packages("Rcpp")
install.packages("Rcpp11")
install.packages("Rcpp")
install.packages("Rtools")
setwd('.')
y <- read.csv(file="input1.csv", header=TRUE, sep=";")
y <- as.numeric(sub(",", ".", unlist(y), fixed = TRUE))
alfa <- 18.7
beta <- 18
gamma_y <- dgamma(y, alfa, beta)
L = prod(gamma_y)
l = log(L)
# first answer
L
l
beta = 19
gamma_y <- dgamma(y, alfa, beta)
L = prod(gamma_y)
l = log(L)
# second answer
L
l
library(MASS)
beta_estimator = fitdistr(y, "gamma", start=list(shape=alfa, rate=beta), lower = c(alfa-0.0000000001, 0), upper = c(alfa, 100))$estimate
beta_estimator
gamma_y_estimator <- dgamma(y, alfa, beta_estimator)
L_estimator = prod(gamma_y_estimator)
L_estimator
log_likelihood <- function(beta_est) {
temp_dist <- dgamma(y,alfa,beta_est)
log_dist = log(temp_dist)
sum_log_dist <- sum(log_dist)
}
library(numDeriv)
hessian(log_likelihood,beta_estimator[2])
# suppose beta is following a normal distribution
# then we can find a 95% confidence interval as
c("inf"=qnorm(0.025),"sup"=qnorm(0.975))
h <- hessian(log_likelihood,beta_estimator[2])
h
c("inf"=qnorm(0.025,mean=beta_estimator,sd=sqrt(h)),"sup"=qnorm(0.975,mean=beta_estimator,sd=sqrt(h)))
c("inf"=qnorm(0.025,mean=beta_estimator,sd=sqrt(-1/h)),"sup"=qnorm(0.975,mean=beta_estimator,sd=sqrt(-1/h)))
setwd('.')
y <- read.csv(file="input1.csv", header=TRUE, sep=";")
y <- as.numeric(sub(",", ".", unlist(y), fixed = TRUE))
alfa <- 18.7
beta <- 18
gamma_y <- dgamma(y, alfa, beta)
L = prod(gamma_y)
l = log(L)
# first answer
L
l
beta = 19
gamma_y <- dgamma(y, alfa, beta)
L = prod(gamma_y)
l = log(L)
# second answer
L
l
library(MASS)
beta_estimator = fitdistr(y, "gamma", start=list(shape=alfa, rate=beta), lower = c(alfa-0.0000000001, 0), upper = c(alfa, 100))$estimate
beta_estimator
gamma_y_estimator <- dgamma(y, alfa, beta_estimator)
L_estimator = prod(gamma_y_estimator)
L_estimator
log_likelihood <- function(beta_est) {
temp_dist <- dgamma(y,alfa,beta_est)
log_dist = log(temp_dist)
sum_log_dist <- sum(log_dist)
}
library(numDeriv)
h <- hessian(log_likelihood,beta_estimator[2])
h
# suppose beta is following a normal distribution
# then we can find a 95% confidence interval as
c("inf"=qnorm(0.025,mean=beta_estimator,sd=sqrt(-1/h)),"sup"=qnorm(0.975,mean=beta_estimator,sd=sqrt(-1/h)))
# suppose beta is following a normal distribution
# then we can find a 95% confidence interval as
c("inf"=qnorm(0.025,mean=beta_estimator[2],sd=sqrt(-1/h)),"sup"=qnorm(0.975,mean=beta_estimator[2],sd=sqrt(-1/h)))
beta_estimator[2]
setwd('.')
y <- read.csv(file="input1.csv", header=TRUE, sep=";")
y <- as.numeric(sub(",", ".", unlist(y), fixed = TRUE))
alfa <- 18.7
beta <- 18
gamma_y <- dgamma(y, alfa, beta)
L = prod(gamma_y)
l = log(L)
# first answer
L
l
beta = 19
gamma_y <- dgamma(y, alfa, beta)
L = prod(gamma_y)
l = log(L)
# second answer
L
l
# exercise 2
library(MASS)
beta_estimator = fitdistr(y, "gamma", start=list(shape=alfa, rate=beta), lower = c(alfa-0.0000000001, 0), upper = c(alfa, 100))$estimate
beta_estimator
gamma_y_estimator <- dgamma(y, alfa, beta_estimator)
L_estimator = prod(gamma_y_estimator)
L_estimator
log_likelihood <- function(beta_est) {
temp_dist <- dgamma(y,alfa,beta_est)
log_dist = log(temp_dist)
sum_log_dist <- sum(log_dist)
}
library(numDeriv)
h <- hessian(log_likelihood,beta_estimator[2])
h
# suppose beta is following a normal distribution
# then we can find a 95% confidence interval as
c("inf"=qnorm(0.025,mean=beta_estimator[2],sd=sqrt(-1/h)),"sup"=qnorm(0.975,mean=beta_estimator[2],sd=sqrt(-1/h)))
beta_estimator[2]
? dnorm
